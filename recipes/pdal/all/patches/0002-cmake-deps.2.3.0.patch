diff --git a/cmake/geotiff.cmake b/cmake/geotiff.cmake
index 1d1e8af..a396999 100644
--- a/cmake/geotiff.cmake
+++ b/cmake/geotiff.cmake
@@ -4,8 +4,8 @@
 
 find_package(GeoTIFF REQUIRED 1.3.0)
 set_package_properties(GeoTIFF PROPERTIES TYPE REQUIRED)
-if (GEOTIFF_FOUND)
-    include_directories("${GEOTIFF_INCLUDE_DIR}")
+if (GeoTIFF_FOUND)
+    include_directories("${GeoTIFF_INCLUDE_DIR}")
     set(PDAL_HAVE_LIBGEOTIFF 1)
     mark_as_advanced(CLEAR TIFF_INCLUDE_DIR)
     mark_as_advanced(CLEAR TIFF_LIBRARY)
diff --git a/cmake/unwind.cmake b/cmake/unwind.cmake
index 8ff7398..99db48b 100644
--- a/cmake/unwind.cmake
+++ b/cmake/unwind.cmake
@@ -3,6 +3,6 @@
 #
 
 set(FPHSA_NAME_MISMATCHED 1) # Suppress warnings, see https://cmake.org/cmake/help/v3.17/module/FindPackageHandleStandardArgs.html
-find_package(Libunwind QUIET)
+find_package(libunwind QUIET)
 set(FPHSA_NAME_MISMATCHED 0)
 
diff --git a/cmake/zstd.cmake b/cmake/zstd.cmake
index bfaa5b2..afba1f5 100644
--- a/cmake/zstd.cmake
+++ b/cmake/zstd.cmake
@@ -4,10 +4,10 @@
 option(WITH_ZSTD
     "Build support for compression/decompression with Zstd." TRUE)
 if (WITH_ZSTD)
-    find_package(ZSTD QUIET)
-    set_package_properties(ZSTD PROPERTIES TYPE
+    find_package(zstd QUIET)
+    set_package_properties(zstd PROPERTIES TYPE
         PURPOSE "General compression support")
-    if (ZSTD_FOUND)
+    if (zstd_FOUND)
         set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES}
             "${ZSTD_STATIC_LIB}")
         mark_as_advanced(CLEAR ZSTD_INCLUDE_DIRS)
diff --git a/pdal/util/CMakeLists.txt b/pdal/util/CMakeLists.txt
index 6b3e889..b9dfb50 100644
--- a/pdal/util/CMakeLists.txt
+++ b/pdal/util/CMakeLists.txt
@@ -10,9 +10,9 @@ include(${PDAL_CMAKE_DIR}/execinfo.cmake)
 include(${PDAL_CMAKE_DIR}/threads.cmake)
 include(${PDAL_CMAKE_DIR}/unwind.cmake)
 
-if(LIBUNWIND_FOUND)
+if(libunwind_FOUND)
     set(BACKTRACE_SOURCE BacktraceUnwind.cpp)
-    set(BACKTRACE_LIBRARIES ${LIBUNWIND_LIBRARIES})
+    set(BACKTRACE_LIBRARIES ${libunwind_LIBRARIES})
 elseif(LIBEXECINFO_FOUND)
     set(BACKTRACE_SOURCE BacktraceExecinfo.cpp)
     set(BACKTRACE_LIBRARIES ${LIBEXECINFO_LIBRARIES})
